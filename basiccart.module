<?php
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\basiccart\OrderConnectStorage;
use Drupal\basiccart\Utility;


function basiccart_theme($existing, $type, $theme, $path) {
  return array(
    'basiccart_cart_template' => array(
      'variables' => array('basiccart' => NULL),
    ),
  );
}


/**
 * Implements hook_ENTITY_TYPE_view() for node entities.
 */
function basiccart_node_view(array &$build, EntityInterface $node, EntityViewDisplayInterface $display, $view_mode) {
  global $base_url;
}


function basiccart_page_attachments(array &$page) {
  $page['#attached']['library'][] = 'basiccart/basiccart';
}

function basiccart_entity_insert(EntityInterface $node) {
   $utility = new Utility();
  if($utility::is_basiccart_order($node->bundle())) {
    $get_cart = $utility::get_cart();
    $cart     = $get_cart['cart'];
    $nid   = $node->id();
    $order = new OrderConnectStorage();
    foreach ($cart  as $key => $value) {
      $params['oid'] = $nid;
      $params['id']  = $key;
      $params['entitytype']  = $value->getEntityTypeId();
      $params['quantity']  = $get_cart['cart_quantity'][$key];
      $order->insert($params);
    }
   $utility::empty_cart();
  } 
}


function basiccart_form_alter(&$form,FormStateInterface $form_state, $form_id) {
   $form_ids = array('node_basiccart_order_edit_form', 'node_basiccart_order_form' );
   if(in_array($form_id,$form_ids)) {
      $form['title']['widget'][0]['value']['#title'] = t('Name');

      unset($form['basiccart_vat']);
      unset($form['basiccart_total_price']);
      $form['actions']['submit']['#value'] = t('Place Order');
   }
}

function basiccart_entity_presave(EntityInterface $node) {
   $utility = new Utility();
  if($utility::is_basiccart_order($node->bundle())) {
    $get_price = $utility::get_total_price();
     $bundle = $node->bundle();
    if(empty($node->id())) {
      $node->set('basiccart_vat', $get_price->vat);
      $node->set('basiccart_total_price', $get_price->total);
    }
  }  
}

function basiccart_entity_delete(EntityInterface $node) {
   $utility = new Utility();
  if($utility::is_basiccart_order($node->bundle())) {
    $entitytype = $node->getEntityTypeId();
    $id = $node->id();
    $bundle = $node->bundle();
    if(isset($entitytype) && isset($id)){
       $params['oid'] = $id;
       $params['entitytype'] = $entitytype;  
       $order = new OrderConnectStorage();
       $order->order_delete($params);
    }
  } 
}

